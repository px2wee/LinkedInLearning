import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
df = pd.read_csv("/content/sample_data/13_challenge_synthetic_consumer_intent.csv")

# Descriptive Analysis
print("Descriptive Statistics:\n")
print(df.describe(include='all'))
print("\nMissing Values:\n")
print(df.isnull().sum())
print("\nClass Distribution:\n")
print(df['buying_intent'].value_counts())

# Preprocessing (example - adjust based on actual dataset)
# Convert categorical variables if needed
df_encoded = pd.get_dummies(df.drop(columns=['buying_intent']), drop_first=True)

# Features and label
X = df_encoded
y = df['buying_intent']

# Split into train/test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Random Forest
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Evaluation
print("\nRandom Forest Classification Report:")
print(classification_report(y_test, y_pred))
print(f"Accuracy: {accuracy_score(y_test, y_pred):.2f}")
